{% extends path(aplicacion.ruta) ~ '/admin/cuestionario/index.html.twig' %}

{% block content %}
    <div class="pagina-titulo">{{ titulo }}</div>

    <div class="my-4">
        <table class="tabla-condensada" id="datosGrupos">
            <caption class="caption-top">{{ cuestionario.titulo }}</caption>
            <thead class="cabecera-condensada">
                <tr>
                    <th>Orden</th>
                    <th>Orden</th>
                    <th>Código</th>
                    <th>Grupo</th>
                    <th>Preguntas</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
            {%- for grupo in grupos %}
                <tr class="fila" data-id="{{ grupo.id }}">
                    <td><span class="badge-secondary" title="Reordenar grupos"><em class="fas fa-sort"></em></span></td>
                    <td>{{ grupo.orden }}</td>
                    <td>{{ grupo.codigo }}</td>
                    <td>{{ grupo.titulo }}</td>
                    <td>{{ grupo.preguntas|length }}</td>
                    <td>
                        <a href="{{ path(aplicacion.ruta ~ '_admin_grupo_show', {cuestionario: cuestionario.id, grupo: grupo.id}) }}">
                            <em class="mx-1 fas fa-eye" title="Ver"></em>
                        </a>
                        {%- if cuestionario.estado.nombre == constant('App\\Entity\\Sistema\\Estado::BORRADOR') %}
                            <a href="{{ path(aplicacion.ruta ~ '_admin_grupo_edit', {cuestionario: cuestionario.id, grupo: grupo.id}) }}">
                                <em class="mx-1 fas fa-edit" title="Editar"></em>
                            </a>
                        {%- endif %}
                        <a href="{{ path(aplicacion.ruta ~ '_admin_pregunta_index', {cuestionario: cuestionario.id, grupo: grupo.id}) }}">
                            <em class="mx-1 fas fa-question-circle" title="Preguntas"></em>
                        </a>
                    </td>
                </tr>
            {%- endfor %}
            </tbody>
        </table>
        {%- if grupos|length > 1 %}
            <div>
                <em class="mx-1 fas fa-info-circle text-info"></em>
                El orden de los grupos se modifica seleccionando y arrastrando el icono de la fila deseada.
                Al finalizar, los cambios tienen que grabarse pulsando sobre el botón "Grabar orden".
            </div>
        {%- endif %}
    </div>
{% endblock %}

{% block botones %}
    {%- if cuestionario.estado.nombre == constant('App\\Entity\\Sistema\\Estado::BORRADOR') %}
        <li class="nav-item me-2">
            <a class="btn btn-primary" href="{{ path(aplicacion.ruta ~ '_admin_grupo_new', {id: cuestionario.id}) }}">
                <em class="fas fa-plus"></em> Crear grupo
            </a>
        </li>
    {%- endif %}
    <li class="nav-item me-2">
         <a id="ordenar" class="btn btn-primary disabled" href=""><em class="fas fa-save"></em> Grabar orden</a>
    </li>
    <div id="aviso" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body"></div>
            <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
{% endblock %}

{% block migas %}
    {{ parent() }}
    <li class="breadcrumb-item"><a href="{{ path(aplicacion.ruta ~ '_admin_cuestionario_index') }}">Cuestionarios</a></li>
    <li class="breadcrumb-item">
        <a href="{{ path(aplicacion.ruta ~ '_admin_cuestionario_show', {id: cuestionario.id}) }}">{{ cuestionario.codigo }}</a>
    </li>
{% endblock %}

{% block js %}
    {{ parent() }}
    <script type="module">
        import { Toast } from 'bootstrap';

        const ordenar = $('#ordenar');
        const grupos = $('#datosGrupos').dataTable({
            buttons: [
                {
                    extend: 'copy',
                    exportOptions: {
                        columns: [2, 3, 4],
                    },
                    text: '<i class="fas fa-copy"></i>',
                    titleAttr: 'Copiar',
                },
                {
                    extend: 'print',
                    exportOptions: {
                        columns: [2, 3, 4],
                    },
                    text: '<i class="fas fa-print"></i>',
                    titleAttr: 'Imprimir',
                },
                {
                    extend: 'csv',
                    exportOptions: {
                        columns: [2, 3, 4],
                    },
                    text: '<i class="fas fa-file-csv"></i>',
                    titleAttr: 'Generar fichero CSV',
                },
                {
                    extend: 'excelHtml5',
                    exportOptions: {
                        columns: [2, 3, 4],
                    },
                    text: '<i class="fas fa-file-excel"></i>',
                    titleAttr: 'Generar fichero Excel',
                },
            ],
            columnDefs: [
                {
                    visible: false,
                    targets: [1],
                },
                {
                    type: 'num',
                    targets: [1, 4],
                },
                {
                    orderable: false,
                    targets: '_all'
                },
            ],
            dom: '<"row"<"col-sm-12 col-md-4"B><"col-sm-12 col-md-4"l><"col-sm-12 col-md-4"f>>' +
                '<"row"<"col-sm-12"<"table-responsive"tr>>>' +
                '<"row"<"col-sm-12 col-md-5"i><"col-sm-12 col-md-7"p>>',
            language: {
                url: '{{ asset("includes/datatable.es.json") }}',
            },
            order: [
                [1, 'asc'],
            ],
            rowReorder: {
                dataSrc: 1,
                selector: 'td:first-child',
            },
        }).on('row-reordered.dt', function (e, diff) {
            // Activar botón de reordenar
            if (diff.length > 0) {
                ordenar.removeClass('disabled');
            }
        });
        // Aviso de resultado
        const aviso = new Toast('#aviso', {
            autohide: true,
            delay: 3000,
        });
        const mensaje = $('#aviso').find('.toast-body');
        // Reordenar grupos
        ordenar.on('click', function (e) {
            e.preventDefault();
            let orden = [];
            $('.fila').each(function () {
                orden.push($(this).data('id'));
            });
            $.ajax({
                type: 'POST',
                url: "{{ path(aplicacion.ruta ~ '_admin_grupo_orden', {id: cuestionario.id}) }}",
                data: {orden: orden},
                dataType: 'JSON',
                async: true,
                success: function () {
                    mensaje.html('Orden de los grupos actualizado.');
                    $('#aviso').addClass('text-bg-warning').removeClass('text-bg-danger');
                    aviso.show();
                    ordenar.addClass('disabled');
                },
                error: function (xhr) {
                    let texto = xhr['responseJSON']['mensaje'] ?? 'Se ha producido un error al guardar los datos.';
                    mensaje.html('<small>' + texto + '</small>');
                    $('#aviso').addClass('text-bg-danger').removeClass('text-bg-warning');
                    aviso.show();
                },
            });
        });
    </script>
{% endblock %}
